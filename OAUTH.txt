OAUTH是什么？
授权协议机制，授权方和被授权方遵循这个协议去写代码提供服务,OAuth 的核心就是向第三方应用颁发令牌
例如，第三方登陆 QQ 微信 微博登陆

例如，在豆瓣用QQ登陆，先从豆瓣跳转QQ授权，QQ授权后再回到豆瓣页面.豆瓣是客户端，QQ是认证服务器

第一步 豆瓣点击使用QQ登陆，豆瓣服务器发送一个授权的请求，然后重定向302到重定向地址QQ
 			 
第二步 QQ接收到授权请求	,用户输入密码账号，点击授权，QQ校验用户名和密码，若成功就会返回一个重定向地址指向请求授权的页面		 

第三步 QQ服务器判断成功后，豆瓣拿着QQ返回的授权码模拟浏览器发起两次请求，第一次拿着上次返回回来的code去获取token，再拿着返回的token去获取对应的用户信息，最后把用户信息储存起来，返回给浏览器处理相关的逻辑 oAuth2.0授权结束

OAUTH的四种授权模式？

授权码（authorization-code）授权码（authorization code）方式，指的是第三方应用先申请一个授权码，然后再用该码获取令牌。
隐藏式（implicit）有些 Web 应用是纯前端应用，没有后端。这时就不能用上面的方式了，必须将令牌储存在前端。RFC 6749 就规定了第二种方式，允许直接向前端颁发令牌。这种方式没有授权码这个中间步骤，所以称为（授权码）"隐藏式"（implicit）。
密码式（password）如果你高度信任某个应用，RFC 6749 也允许用户把用户名和密码，直接告诉该应用。该应用就使用你的密码，申请令牌，这种方式称为"密码式"（password）
客户端凭证（client credentials）最后一种方式是凭证式（client credentials），适用于没有前端的命令行应用，即在命令行下请求令牌。这种方式给出的令牌，是针对第三方应用的，而不是针对用户的，即有可能多个用户共享同一个令牌。